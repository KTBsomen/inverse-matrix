import numpy as np
tfg=np.array(['A','B','C','D','E','F','G','H','I'])
MAJ=tfg.reshape(3,3)
print("\t\t.....we support only 3x3 matrix....")
print('')
print(MAJ)
print("")

A=int(input("A :  "))
B=int(input("B :  "))
C=int(input("C :  "))
D=int(input("D :  "))
E=int(input("E :  "))
F=int(input("F :  "))
G=int(input("G :  "))
H=int(input("H :  "))
I=int(input("I :  "))
#AA=int(input("AA :  "))
#XX=int(input("KK :  "))
ar=np.array([A,B,C,D,E,F,G,H,I])
ar1=ar.reshape(3,3)

#print(" your matrix look like : \t")
print("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~")
print("Let ,  your  matrix  be  'A' " )

print("  A  =  ")
print("\n",ar1)

print("")

print("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~")

AA=+((E*I)-(F*H))
BB=-((D*I)-(F*G))
CC=+((D*H)-(G*E))
DD=-((B*I)-(C*H))
EE=+((A*I)-(C*G))
FF=-((A*H)-(B*G))
GG=+((B*F)-(C*E))
HH=-((A*F)-(C*D))
II=+((A*E)-(B*D))
arr=np.array([AA,BB,CC,DD,EE,FF,GG,HH,II])
ar2=arr.reshape(3,3)
adjmain=ar2.transpose()
mod=(+(A*((E*I)-(F*H)))-(B*((D*I)-(F*G)))+(C*((D*H)-(G*E))))
print("the |A|  = ",mod)
print("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~")
#print("\t",mod)
print('')
print("Let, 'D' is the matrix with the CO-factor of  |A| ")
print(" D =  ")
print('')
print(ar2)
print("")
print("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~")
print("So the adjoint of your matrix(A) [adjA] :  ")
print("\n",adjmain)
print("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~")

print(" Now the A`ยน {A inverse} =  \n")
gun=(1/mod)*(adjmain)
print(gun)
print("")
print("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~")
#invrs=input("Do you want to multiply any matrix with A`ยน {A inverse}  [y/n] :  ")
#